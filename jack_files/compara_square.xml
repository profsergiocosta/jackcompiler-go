<class>
<KEYWORD>class</KEYWORD>
<IDENTIFIER>Square</IDENTIFIER>
<SYMBOL>{</SYMBOL>
<classVarDec>
<KEYWORD>field</KEYWORD>
<KEYWORD>int</KEYWORD>
<IDENTIFIER>x</IDENTIFIER>
<SYMBOL>,</SYMBOL>
<IDENTIFIER>y</IDENTIFIER>
<SYMBOL>;</SYMBOL>
</classVarDec>
<classVarDec>
<KEYWORD>field</KEYWORD>
<KEYWORD>int</KEYWORD>
<IDENTIFIER>size</IDENTIFIER>
<SYMBOL>;</SYMBOL>
</classVarDec>
<subroutineDec>
<KEYWORD>constructor</KEYWORD>
<IDENTIFIER>Square</IDENTIFIER>
<IDENTIFIER>new</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
<KEYWORD>int</KEYWORD>
<IDENTIFIER>Ax</IDENTIFIER>
<SYMBOL>,</SYMBOL>
<KEYWORD>int</KEYWORD>
<IDENTIFIER>Ay</IDENTIFIER>
<SYMBOL>,</SYMBOL>
<KEYWORD>int</KEYWORD>
<IDENTIFIER>Asize</IDENTIFIER>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>x</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>Ax</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>y</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>Ay</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>size</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>Asize</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>draw</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>dispose</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Memory</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>deAlloc</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<KEYWORD>this</KEYWORD>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>draw</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>erase</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>incSize</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<ifStatement>
<KEYWORD>if</KEYWORD>
<SYMBOL>(</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>)</SYMBOL>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>erase</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>size</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>size</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>draw</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
</statements>
<SYMBOL>}</SYMBOL>
</ifStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>decSize</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<ifStatement>
<KEYWORD>if</KEYWORD>
<SYMBOL>(</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>size</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>)</SYMBOL>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>erase</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>size</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>size</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>draw</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
</statements>
<SYMBOL>}</SYMBOL>
</ifStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>moveUp</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<ifStatement>
<KEYWORD>if</KEYWORD>
<SYMBOL>(</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>)</SYMBOL>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>y</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
</statements>
<SYMBOL>}</SYMBOL>
</ifStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>moveDown</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<ifStatement>
<KEYWORD>if</KEYWORD>
<SYMBOL>(</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>)</SYMBOL>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>y</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
</statements>
<SYMBOL>}</SYMBOL>
</ifStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>moveLeft</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<ifStatement>
<KEYWORD>if</KEYWORD>
<SYMBOL>(</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>)</SYMBOL>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>x</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
</statements>
<SYMBOL>}</SYMBOL>
</ifStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<KEYWORD>method</KEYWORD>
<KEYWORD>void</KEYWORD>
<IDENTIFIER>moveRight</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<parameterList>
</parameterList>
<SYMBOL>)</SYMBOL>
<subroutineBody>
<SYMBOL>{</SYMBOL>
<statements>
<ifStatement>
<KEYWORD>if</KEYWORD>
<SYMBOL>(</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>)</SYMBOL>
<SYMBOL>{</SYMBOL>
<statements>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<letStatement>
<KEYWORD>let</KEYWORD>
<IDENTIFIER>x</IDENTIFIER>
<SYMBOL>=</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>;</SYMBOL>
</letStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>setColor</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
<doStatement>
<KEYWORD>do</KEYWORD>
<IDENTIFIER>Screen</IDENTIFIER>
<SYMBOL>.</SYMBOL>
<IDENTIFIER>drawRectangle</IDENTIFIER>
<SYMBOL>(</SYMBOL>
<ExpressionList>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>x</IDENTIFIER>
</TERM>
</EXPRESSION>
<SYMBOL>,</SYMBOL>
<EXPRESSION>
<TERM>
<IDENTIFIER>y</IDENTIFIER>
</TERM>
</EXPRESSION>
</ExpressionList>
<SYMBOL>)</SYMBOL>
<SYMBOL>;</SYMBOL>
</doStatement>
</statements>
<SYMBOL>}</SYMBOL>
</ifStatement>
<returnStatement>
<KEYWORD>return</KEYWORD>
<SYMBOL>;</SYMBOL>
</returnStatement>
</statements>
<SYMBOL>}</SYMBOL>
</subroutineBody>
</subroutineDec>
<SYMBOL>}</SYMBOL>
</class>
